{"version":3,"sources":["components/CitySelector.js","components/DataDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["CitySelector","_ref","onCityChange","cities","React","createElement","onChange","e","target","value","disabled","length","map","city","key","DataDisplay","data","weather","temperature_C","description","hotels","hotel","idx","places","place","App","setCity","useState","setData","loading","setLoading","error","setError","className","async","selectedCity","res","fetch","ok","Error","result","json","console","message","style","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"gMA8BeA,MA5BMC,IAAuB,IAAtB,aAAEC,GAAcD,EACpC,MAAME,EAAS,CACb,QACA,QACA,WACA,YACA,SACA,YACA,OACA,SACA,eAGF,OACEC,IAAAC,cAAA,UACEC,SAAWC,GAAML,EAAaK,EAAEC,OAAOC,OACvCC,SAA4B,IAAlBP,EAAOQ,QAEjBP,IAAAC,cAAA,UAAQI,MAAM,IAAG,iBAChBN,EAAOS,IAAKC,GACXT,IAAAC,cAAA,UAAQS,IAAKD,EAAMJ,MAAOI,GACvBA,MCgBIE,MArCKd,IAAqB,IAApB,KAAEY,EAAI,KAAEG,GAAMf,EACjC,OACEG,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAKQ,GACLT,IAAAC,cAAA,UAAI,WACHW,EAAKC,SACND,EAAKC,QAAQC,eACbF,EAAKC,QAAQE,YACXf,IAAAC,cAAA,WACED,IAAAC,cAAA,SACED,IAAAC,cAAA,cAAQ,gBAAqB,IAAEW,EAAKC,QAAQC,cAAc,UAE5Dd,IAAAC,cAAA,SACED,IAAAC,cAAA,cAAQ,gBAAqB,IAAEW,EAAKC,QAAQE,cAIhDf,IAAAC,cAAA,SAAG,8BAGLD,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,UACGW,EAAKI,OAAOR,IAAI,CAACS,EAAOC,IACvBlB,IAAAC,cAAA,MAAIS,IAAKQ,GAAMD,KAInBjB,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,UACGW,EAAKO,OAAOX,IAAI,CAACY,EAAOF,IACvBlB,IAAAC,cAAA,MAAIS,IAAKQ,GAAME,O,MCcVC,MAzCf,WACE,MAAOZ,EAAMa,GAAWC,mBAAS,KAC1BX,EAAMY,GAAWD,mBAAS,OAC1BE,EAASC,GAAcH,oBAAS,IAChCI,EAAOC,GAAYL,mBAAS,MAsBnC,OACEvB,IAAAC,cAAA,OAAK4B,UAAU,OACb7B,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAACL,EAAY,CAACE,aAvBOgC,UACvBR,EAAQS,GACRL,GAAW,GACXE,EAAS,MAET,IACE,MAAMI,QAAYC,MAAM,8BAA8BF,GACtD,IAAKC,EAAIE,GACP,MAAM,IAAIC,MAAM,wBAElB,MAAMC,QAAeJ,EAAIK,OACzBb,EAAQY,GACR,MAAOT,GACPW,QAAQX,MAAM,uBAAwBA,GACtCC,EAASD,EAAMY,SAChB,QACCb,GAAW,OAQVD,GAAWzB,IAAAC,cAAA,SAAG,cACd0B,GAAS3B,IAAAC,cAAA,KAAGuC,MAAO,CAAEC,MAAO,QAAS,UAAQd,GAC7Cf,IAASa,IAAYE,GACpB3B,IAAAC,cAAA,OAAK4B,UAAU,kBACb7B,IAAAC,cAACU,EAAW,CAACF,KAAMA,EAAMG,KAAMA,OC3B1B8B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKhD,IAAkD,IAAjD,OAAEiD,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASrD,EACpEiD,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHvD,IAAAC,cAACD,IAAMwD,WAAU,KACfxD,IAAAC,cAACoB,EAAG,QAORqB,K","file":"static/js/main.0676105a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst CitySelector = ({ onCityChange }) => {\n  const cities = [\n    \"Paris\",\n    \"Tokyo\",\n    \"New York\",\n    \"Bangalore\",\n    \"Berlin\",\n    \"Singapore\",\n    \"Rome\",\n    \"Sydney\",\n    \"Los Angeles\",\n  ];\n\n  return (\n    <select\n      onChange={(e) => onCityChange(e.target.value)}\n      disabled={cities.length === 0}\n    >\n      <option value=\"\">Select a City</option>\n      {cities.map((city) => (\n        <option key={city} value={city}>\n          {city}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default CitySelector;\n","import React from \"react\";\n\nconst DataDisplay = ({ city, data }) => {\n  return (\n    <div>\n      <h2>{city}</h2>\n      <h3>Weather</h3>\n      {data.weather &&\n      data.weather.temperature_C &&\n      data.weather.description ? (\n        <div>\n          <p>\n            <strong>Temperature:</strong> {data.weather.temperature_C} Â°C\n          </p>\n          <p>\n            <strong>Description:</strong> {data.weather.description}\n          </p>\n        </div>\n      ) : (\n        <p>No weather data available.</p>\n      )}\n\n      <h3>Hotels</h3>\n      <ul>\n        {data.hotels.map((hotel, idx) => (\n          <li key={idx}>{hotel}</li>\n        ))}\n      </ul>\n\n      <h3>Places</h3>\n      <ul>\n        {data.places.map((place, idx) => (\n          <li key={idx}>{place}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default DataDisplay;\n","import React, { useState } from \"react\";\nimport CitySelector from \"./components/CitySelector\";\nimport DataDisplay from \"./components/DataDisplay\";\nimport \"./App.css\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleCityChange = async (selectedCity) => {\n    setCity(selectedCity);\n    setLoading(true);\n    setError(null); // Reset previous errors\n\n    try {\n      const res = await fetch(`http://localhost:5000/data/${selectedCity}`);\n      if (!res.ok) {\n        throw new Error(\"Failed to fetch data\");\n      }\n      const result = await res.json();\n      setData(result);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setError(error.message); // Set error message to state\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Itinerary Suggester</h1>\n      <CitySelector onCityChange={handleCityChange} />\n      {loading && <p>Loading...</p>}\n      {error && <p style={{ color: \"red\" }}>Error: {error}</p>}\n      {data && !loading && !error && (\n        <div className=\"data-container\">\n          <DataDisplay city={city} data={data} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}